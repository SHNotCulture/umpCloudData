package com.ump.dao;

import com.ump.dao.sqlProvider.TParkPortStatusSqlProvider;
import com.ump.entity.TParkPortStatus;
import com.ump.entity.TParkPortStatusCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TParkPortStatusMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkPortStatusSqlProvider.class, method="countByExample")
    long countByExample(TParkPortStatusCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TParkPortStatusSqlProvider.class, method="deleteByExample")
    int deleteByExample(TParkPortStatusCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_park_port_status",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_park_port_status (id, park_id, ",
        "park_name, port_id, ",
        "inoutType, ipcSn, ",
        "auxIpc1Sn, auxIpc2Sn, ",
        "softwareVer, IPCofflinelist, ",
        "port_name, computer_name, ",
        "id_address, online_status, ",
        "carIn_flow, groud_sensor_camera, ",
        "groud_sensor_banister, camera_staus, ",
        "banister_status, alarm_status, ",
        "camera_carplate, camera_url, ",
        "lane_status, ipc_offline, ",
        "deal_user_id, deal_user_name, ",
        "deal_status, deal_date)",
        "values (#{id,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{parkName,jdbcType=VARCHAR}, #{portId,jdbcType=VARCHAR}, ",
        "#{inouttype,jdbcType=INTEGER}, #{ipcsn,jdbcType=VARCHAR}, ",
        "#{auxipc1sn,jdbcType=VARCHAR}, #{auxipc2sn,jdbcType=VARCHAR}, ",
        "#{softwarever,jdbcType=VARCHAR}, #{ipcofflinelist,jdbcType=VARCHAR}, ",
        "#{portName,jdbcType=VARCHAR}, #{computerName,jdbcType=VARCHAR}, ",
        "#{idAddress,jdbcType=VARCHAR}, #{onlineStatus,jdbcType=INTEGER}, ",
        "#{carinFlow,jdbcType=VARCHAR}, #{groudSensorCamera,jdbcType=INTEGER}, ",
        "#{groudSensorBanister,jdbcType=INTEGER}, #{cameraStaus,jdbcType=INTEGER}, ",
        "#{banisterStatus,jdbcType=INTEGER}, #{alarmStatus,jdbcType=INTEGER}, ",
        "#{cameraCarplate,jdbcType=VARCHAR}, #{cameraUrl,jdbcType=VARCHAR}, ",
        "#{laneStatus,jdbcType=INTEGER}, #{ipcOffline,jdbcType=INTEGER}, ",
        "#{dealUserId,jdbcType=INTEGER}, #{dealUserName,jdbcType=VARCHAR}, ",
        "#{dealStatus,jdbcType=INTEGER}, #{dealDate,jdbcType=VARCHAR})"
    })
    int insert(TParkPortStatus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @InsertProvider(type=TParkPortStatusSqlProvider.class, method="insertSelective")
    int insertSelective(TParkPortStatus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @SelectProvider(type=TParkPortStatusSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_id", property="portId", jdbcType=JdbcType.VARCHAR),
        @Result(column="inoutType", property="inouttype", jdbcType=JdbcType.INTEGER),
        @Result(column="ipcSn", property="ipcsn", jdbcType=JdbcType.VARCHAR),
        @Result(column="auxIpc1Sn", property="auxipc1sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="auxIpc2Sn", property="auxipc2sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="softwareVer", property="softwarever", jdbcType=JdbcType.VARCHAR),
        @Result(column="IPCofflinelist", property="ipcofflinelist", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_name", property="portName", jdbcType=JdbcType.VARCHAR),
        @Result(column="computer_name", property="computerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_address", property="idAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="carIn_flow", property="carinFlow", jdbcType=JdbcType.VARCHAR),
        @Result(column="groud_sensor_camera", property="groudSensorCamera", jdbcType=JdbcType.INTEGER),
        @Result(column="groud_sensor_banister", property="groudSensorBanister", jdbcType=JdbcType.INTEGER),
        @Result(column="camera_staus", property="cameraStaus", jdbcType=JdbcType.INTEGER),
        @Result(column="banister_status", property="banisterStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_status", property="alarmStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="camera_carplate", property="cameraCarplate", jdbcType=JdbcType.VARCHAR),
        @Result(column="camera_url", property="cameraUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="lane_status", property="laneStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ipc_offline", property="ipcOffline", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_user_id", property="dealUserId", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_user_name", property="dealUserName", jdbcType=JdbcType.VARCHAR),
        @Result(column="deal_status", property="dealStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_date", property="dealDate", jdbcType=JdbcType.VARCHAR)
    })
    List<TParkPortStatus> selectByExample(TParkPortStatusCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, park_id, park_name, port_id, inoutType, ipcSn, auxIpc1Sn, auxIpc2Sn, softwareVer, ",
        "IPCofflinelist, port_name, computer_name, id_address, online_status, carIn_flow, ",
        "groud_sensor_camera, groud_sensor_banister, camera_staus, banister_status, alarm_status, ",
        "camera_carplate, camera_url, lane_status, ipc_offline, deal_user_id, deal_user_name, ",
        "deal_status, deal_date",
        "from t_park_port_status",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_id", property="portId", jdbcType=JdbcType.VARCHAR),
        @Result(column="inoutType", property="inouttype", jdbcType=JdbcType.INTEGER),
        @Result(column="ipcSn", property="ipcsn", jdbcType=JdbcType.VARCHAR),
        @Result(column="auxIpc1Sn", property="auxipc1sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="auxIpc2Sn", property="auxipc2sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="softwareVer", property="softwarever", jdbcType=JdbcType.VARCHAR),
        @Result(column="IPCofflinelist", property="ipcofflinelist", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_name", property="portName", jdbcType=JdbcType.VARCHAR),
        @Result(column="computer_name", property="computerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_address", property="idAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="carIn_flow", property="carinFlow", jdbcType=JdbcType.VARCHAR),
        @Result(column="groud_sensor_camera", property="groudSensorCamera", jdbcType=JdbcType.INTEGER),
        @Result(column="groud_sensor_banister", property="groudSensorBanister", jdbcType=JdbcType.INTEGER),
        @Result(column="camera_staus", property="cameraStaus", jdbcType=JdbcType.INTEGER),
        @Result(column="banister_status", property="banisterStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_status", property="alarmStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="camera_carplate", property="cameraCarplate", jdbcType=JdbcType.VARCHAR),
        @Result(column="camera_url", property="cameraUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="lane_status", property="laneStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ipc_offline", property="ipcOffline", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_user_id", property="dealUserId", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_user_name", property="dealUserName", jdbcType=JdbcType.VARCHAR),
        @Result(column="deal_status", property="dealStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="deal_date", property="dealDate", jdbcType=JdbcType.VARCHAR)
    })
    TParkPortStatus selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortStatusSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TParkPortStatus record, @Param("example") TParkPortStatusCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortStatusSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TParkPortStatus record, @Param("example") TParkPortStatusCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortStatusSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TParkPortStatus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port_status
     *
     * @mbg.generated
     */
    @Update({
        "update t_park_port_status",
        "set park_id = #{parkId,jdbcType=INTEGER},",
          "park_name = #{parkName,jdbcType=VARCHAR},",
          "port_id = #{portId,jdbcType=VARCHAR},",
          "inoutType = #{inouttype,jdbcType=INTEGER},",
          "ipcSn = #{ipcsn,jdbcType=VARCHAR},",
          "auxIpc1Sn = #{auxipc1sn,jdbcType=VARCHAR},",
          "auxIpc2Sn = #{auxipc2sn,jdbcType=VARCHAR},",
          "softwareVer = #{softwarever,jdbcType=VARCHAR},",
          "IPCofflinelist = #{ipcofflinelist,jdbcType=VARCHAR},",
          "port_name = #{portName,jdbcType=VARCHAR},",
          "computer_name = #{computerName,jdbcType=VARCHAR},",
          "id_address = #{idAddress,jdbcType=VARCHAR},",
          "online_status = #{onlineStatus,jdbcType=INTEGER},",
          "carIn_flow = #{carinFlow,jdbcType=VARCHAR},",
          "groud_sensor_camera = #{groudSensorCamera,jdbcType=INTEGER},",
          "groud_sensor_banister = #{groudSensorBanister,jdbcType=INTEGER},",
          "camera_staus = #{cameraStaus,jdbcType=INTEGER},",
          "banister_status = #{banisterStatus,jdbcType=INTEGER},",
          "alarm_status = #{alarmStatus,jdbcType=INTEGER},",
          "camera_carplate = #{cameraCarplate,jdbcType=VARCHAR},",
          "camera_url = #{cameraUrl,jdbcType=VARCHAR},",
          "lane_status = #{laneStatus,jdbcType=INTEGER},",
          "ipc_offline = #{ipcOffline,jdbcType=INTEGER},",
          "deal_user_id = #{dealUserId,jdbcType=INTEGER},",
          "deal_user_name = #{dealUserName,jdbcType=VARCHAR},",
          "deal_status = #{dealStatus,jdbcType=INTEGER},",
          "deal_date = #{dealDate,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TParkPortStatus record);
}